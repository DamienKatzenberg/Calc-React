{"ast":null,"code":"var _jsxFileName = \"/home/damien/git/calc-react-typescript/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useReducer } from 'react';\nimport DigitButton from './DigitButton';\nimport OperationButton from './OperationButton';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ACTIONS = {\n  ADD_DIGIT: 'add-digit',\n  CHOOSE_OPERATION: 'choose-operation',\n  CLEAR: 'clear',\n  DELETE_DIGIT: 'delete-digit',\n  EVALUATE: 'evaluate'\n};\nfunction reducer(state, {\n  type,\n  payload\n}) {\n  switch (type) {\n    case ACTIONS.ADD_DIGIT:\n      if (state.overwrite) {\n        return {\n          ...state,\n          currentOperand: payload,\n          overwrite: false\n        };\n      }\n      if (payload === \"0\" && state.currentOperand === \"0\") return state;\n      if (payload === \".\") {\n        if (!state.currentOperand) return {\n          ...state,\n          currentOperand: \"0.\"\n        };\n        if (state.currentOperand.includes(\".\")) return state;\n      }\n      return {\n        ...state,\n        currentOperand: `${state.currentOperand}${payload}`\n      };\n    case ACTIONS.CLEAR:\n      return {\n        ...state,\n        currentOperand: null,\n        previousOperand: null,\n        operation: null\n      };\n    case ACTIONS.CHOOSE_OPERATION:\n      if (state.currentOperand == null && state.previousOperand == null) {\n        return state;\n      }\n      if (state.currentOperand == null) {\n        return {\n          ...state,\n          operation: payload\n        };\n      }\n      if (state.previousOperand == null) {\n        return {\n          ...state,\n          operation: payload,\n          previousOperand: state.currentOperand,\n          currentOperand: null\n        };\n      }\n      return {\n        ...state,\n        previousOperand: evaluate(state),\n        operation: payload,\n        currentOperand: null\n      };\n    case ACTIONS.EVALUATE:\n      if (state.operation == null || state.currentOperand == null || state.previousOperand == null) {\n        return state;\n      }\n      return {\n        ...state,\n        overwrite: true,\n        previousOperand: null,\n        operation: null,\n        currentOperand: evaluate(state)\n      };\n    case ACTIONS.DELETE_DIGIT:\n      if (state.overwrite) {\n        return {\n          ...state,\n          overwrite: false,\n          currentOperand: null\n        };\n      }\n      if (state.currentOperand == null) {\n        return state;\n      }\n      if (state.currentOperand.length === 1) {\n        return {\n          ...state,\n          currentOperand: null\n        };\n      }\n      return {\n        ...state,\n        currentOperand: state.currentOperand.slice(0, -1)\n      };\n  }\n  return {\n    currentOperand: null,\n    previousOperand: null,\n    operation: null,\n    overwrite: false\n  };\n}\nfunction evaluate({\n  currentOperand,\n  previousOperand,\n  operation\n}) {\n  const prev = previousOperand ? parseFloat(previousOperand) : NaN;\n  const current = currentOperand ? parseFloat(currentOperand) : NaN;\n  if (isNaN(prev) || isNaN(current)) return \"\";\n  let computation = NaN;\n  switch (operation) {\n    case \"+\":\n      computation = prev + current;\n      break;\n    case \"-\":\n      computation = prev - current;\n      break;\n    case \"*\":\n      computation = prev * current;\n      break;\n    case \"รท\":\n      computation = prev / current;\n      break;\n  }\n  return computation.toString();\n}\nconst INTEGER_FORMATTER = new Intl.NumberFormat(\"en-us\", {\n  maximumFractionDigits: 0\n});\nfunction formatOperand(operand) {\n  if (operand == null) return;\n  const [integer, decimal] = operand.split(\".\");\n  if (decimal == null) return INTEGER_FORMATTER.format(parseFloat(integer));\n  return `${INTEGER_FORMATTER.format(parseFloat(integer))}.${decimal}`;\n}\nfunction App() {\n  _s();\n  const initialState = {\n    currentOperand: null,\n    previousOperand: null,\n    operation: null,\n    overwrite: false\n  };\n  const handleKeyboard = event => {\n    if (parseInt(event.key) || event.key === \".\") {\n      dispatch({\n        type: ACTIONS.ADD_DIGIT,\n        payload: event.key\n      });\n    } else if (event.key === \"/\" || event.key === \"*\" || event.key === \"-\" || event.key === \"+\") {\n      dispatch({\n        type: ACTIONS.CHOOSE_OPERATION,\n        payload: event.key\n      });\n    } else if (event.key === \"Enter\" || event.key === \"=\") {\n      dispatch({\n        type: ACTIONS.EVALUATE,\n        payload: \"\"\n      });\n    } else if (event.key === \"Backspace\") {\n      dispatch({\n        type: ACTIONS.DELETE_DIGIT,\n        payload: \"\"\n      });\n    } else if (event.key === \"Escape\") {\n      dispatch({\n        type: ACTIONS.CLEAR,\n        payload: \"\"\n      });\n    }\n  };\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeyboard);\n    // Cleanup function to remove the listener on unmount\n    return () => document.removeEventListener('keydown', handleKeyboard);\n  }, []); // Empty dependency array to run only once\n\n  const [{\n    currentOperand,\n    previousOperand,\n    operation\n  }, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calculator-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calculator-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"output\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"previous-operand\",\n          children: [\" \", formatOperand(previousOperand), \" \", operation, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"current-operand\",\n          children: [\" \", formatOperand(currentOperand), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"span-two accent-color\",\n        onClick: () => dispatch({\n          type: ACTIONS.CLEAR,\n          payload: \"\"\n        }),\n        children: \" AC \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"accent-color\",\n        onClick: () => dispatch({\n          type: ACTIONS.DELETE_DIGIT,\n          payload: \"\"\n        }),\n        children: \" DEL \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OperationButton, {\n        dispatch: dispatch,\n        operation: \"\\xF7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n        dispatch: dispatch,\n        digit: \"7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n        dispatch: dispatch,\n        digit: \"8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n        dispatch: dispatch,\n        digit: \"9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OperationButton, {\n        dispatch: dispatch,\n        operation: \"*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n        dispatch: dispatch,\n        digit: \"4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n        dispatch: dispatch,\n        digit: \"5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n        dispatch: dispatch,\n        digit: \"6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OperationButton, {\n        dispatch: dispatch,\n        operation: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n        dispatch: dispatch,\n        digit: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n        dispatch: dispatch,\n        digit: \"2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n        dispatch: dispatch,\n        digit: \"3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OperationButton, {\n        dispatch: dispatch,\n        operation: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n        dispatch: dispatch,\n        digit: \".\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n        dispatch: dispatch,\n        digit: \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"span-two accent-color\",\n        onClick: () => dispatch({\n          type: ACTIONS.EVALUATE,\n          payload: \"\"\n        }),\n        children: \"= \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ssBrIfZn6iJvhZVSqCvjiw14JzM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useReducer","DigitButton","OperationButton","jsxDEV","_jsxDEV","ACTIONS","ADD_DIGIT","CHOOSE_OPERATION","CLEAR","DELETE_DIGIT","EVALUATE","reducer","state","type","payload","overwrite","currentOperand","includes","previousOperand","operation","evaluate","length","slice","prev","parseFloat","NaN","current","isNaN","computation","toString","INTEGER_FORMATTER","Intl","NumberFormat","maximumFractionDigits","formatOperand","operand","integer","decimal","split","format","App","_s","initialState","handleKeyboard","event","parseInt","key","dispatch","document","addEventListener","removeEventListener","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","digit","_c","$RefreshReg$"],"sources":["/home/damien/git/calc-react-typescript/src/App.tsx"],"sourcesContent":["import { useEffect, useReducer } from 'react';\nimport DigitButton from './DigitButton';\nimport OperationButton from './OperationButton';\nimport './styles.css';\n\nexport const ACTIONS = {\n  ADD_DIGIT: 'add-digit',\n  CHOOSE_OPERATION: 'choose-operation',\n  CLEAR: 'clear',\n  DELETE_DIGIT: 'delete-digit',\n  EVALUATE: 'evaluate'\n}\n\ninterface CalculatorState {\n  currentOperand: string | null,\n  previousOperand: string | null,\n  operation: string | null,\n  overwrite: boolean\n}\n\nfunction reducer(state: CalculatorState, { type, payload }: {\n  type: string,\n  payload: string,\n}): CalculatorState {\n  switch (type) {\n    case ACTIONS.ADD_DIGIT:\n      if (state.overwrite) {\n        return {\n          ...state,\n          currentOperand: payload,\n          overwrite: false\n        }\n      }\n      if (payload === \"0\" && state.currentOperand === \"0\") return state;\n      if (payload === \".\") {\n        if (!state.currentOperand) return { ...state, currentOperand: \"0.\" }\n        if (state.currentOperand.includes(\".\")) return state;\n      }\n      return {\n        ...state,\n        currentOperand: `${state.currentOperand}${payload}`\n      }\n\n    case ACTIONS.CLEAR:\n      return {\n        ...state,\n        currentOperand: null,\n        previousOperand: null,\n        operation: null\n      }\n    case ACTIONS.CHOOSE_OPERATION:\n      if (state.currentOperand == null && state.previousOperand == null) {\n        return state\n      }\n\n      if (state.currentOperand == null) {\n        return {\n          ...state,\n          operation: payload\n        }\n      }\n\n      if (state.previousOperand == null) {\n        return {\n          ...state,\n          operation: payload,\n          previousOperand: state.currentOperand,\n          currentOperand: null\n        }\n      }\n\n      return {\n        ...state,\n        previousOperand: evaluate(state),\n        operation: payload,\n        currentOperand: null\n      }\n\n    case ACTIONS.EVALUATE:\n      if (state.operation == null || state.currentOperand == null || state.previousOperand == null) {\n        return state;\n      }\n\n      return {\n        ...state,\n        overwrite: true,\n        previousOperand: null,\n        operation: null,\n        currentOperand: evaluate(state)\n      }\n\n    case ACTIONS.DELETE_DIGIT:\n      if (state.overwrite) {\n        return {\n          ...state,\n          overwrite: false,\n          currentOperand: null\n        }\n      }\n\n      if (state.currentOperand == null) {\n        return state;\n      }\n\n      if (state.currentOperand.length === 1) {\n        return { ...state, currentOperand: null }\n      }\n\n      return {\n        ...state,\n        currentOperand: state.currentOperand.slice(0, -1)\n      }\n  }\n  return {\n    currentOperand: null,\n    previousOperand: null,\n    operation: null,\n    overwrite: false\n  };\n}\n\nfunction evaluate({ currentOperand, previousOperand, operation }: CalculatorState) {\n  const prev = previousOperand ? parseFloat(previousOperand) : NaN;\n  const current = currentOperand ? parseFloat(currentOperand) : NaN;\n  if (isNaN(prev) || isNaN(current)) return \"\";\n\n  let computation = NaN;\n  switch (operation) {\n    case \"+\":\n      computation = prev + current;\n      break;\n    case \"-\":\n      computation = prev - current;\n      break;\n    case \"*\":\n      computation = prev * current;\n      break;\n    case \"รท\":\n      computation = prev / current;\n      break;\n  }\n\n  return computation.toString();\n}\n\nconst INTEGER_FORMATTER = new Intl.NumberFormat(\"en-us\", {\n  maximumFractionDigits: 0,\n})\n\nfunction formatOperand(operand: string | null) {\n  if (operand == null) return;\n  const [integer, decimal] = operand.split(\".\");\n  if (decimal == null) return INTEGER_FORMATTER.format(parseFloat(integer));\n  return `${INTEGER_FORMATTER.format(parseFloat(integer))}.${decimal}`;\n}\n\nfunction App() {\n  const initialState: CalculatorState = {\n    currentOperand: null,\n    previousOperand: null,\n    operation: null,\n    overwrite: false\n  }\n\n  const handleKeyboard = (event: KeyboardEvent) => {\n    if (parseInt(event.key) || event.key === \".\") {\n      dispatch({ type: ACTIONS.ADD_DIGIT, payload: event.key });\n    } else if (event.key === \"/\" || event.key === \"*\" || event.key === \"-\" || event.key === \"+\") {\n      dispatch({ type: ACTIONS.CHOOSE_OPERATION, payload: event.key });\n    } else if (event.key === \"Enter\" || event.key === \"=\") {\n      dispatch({ type: ACTIONS.EVALUATE, payload: \"\" });\n    } else if (event.key === \"Backspace\") {\n      dispatch({ type: ACTIONS.DELETE_DIGIT, payload: \"\" });\n    } else if (event.key === \"Escape\") {\n      dispatch({ type: ACTIONS.CLEAR, payload: \"\" });\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeyboard);\n    // Cleanup function to remove the listener on unmount\n    return () => document.removeEventListener('keydown', handleKeyboard);\n  }, []);  // Empty dependency array to run only once\n\n  const [{ currentOperand, previousOperand, operation }, dispatch] = useReducer(reducer, initialState)\n  return (\n    <div className=\"calculator-container\">\n      <div className=\"calculator-grid\" >\n        <div className=\"output\" >\n          <div className=\"previous-operand\" > {formatOperand(previousOperand)} {operation} </div>\n          <div className=\"current-operand\" > {formatOperand(currentOperand)} </div>\n        </div>\n        <button className=\"span-two accent-color\" onClick={() => dispatch({ type: ACTIONS.CLEAR, payload: \"\" })}> AC </button>\n        <button className=\"accent-color\" onClick={() => dispatch({ type: ACTIONS.DELETE_DIGIT, payload: \"\" })}> DEL </button>\n        < OperationButton dispatch={dispatch} operation=\"รท\" />\n        <DigitButton dispatch={dispatch} digit=\"7\" />\n        <DigitButton dispatch={dispatch} digit=\"8\" />\n        <DigitButton dispatch={dispatch} digit=\"9\" />\n        <OperationButton dispatch={dispatch} operation=\"*\" />\n        <DigitButton dispatch={dispatch} digit=\"4\" />\n        <DigitButton dispatch={dispatch} digit=\"5\" />\n        <DigitButton dispatch={dispatch} digit=\"6\" />\n        <OperationButton dispatch={dispatch} operation=\"+\" />\n        <DigitButton dispatch={dispatch} digit=\"1\" />\n        <DigitButton dispatch={dispatch} digit=\"2\" />\n        <DigitButton dispatch={dispatch} digit=\"3\" />\n        <OperationButton dispatch={dispatch} operation=\"-\" />\n        <DigitButton dispatch={dispatch} digit=\".\" />\n        <DigitButton dispatch={dispatch} digit=\"0\" />\n        <button className=\"span-two accent-color\" onClick={() => dispatch({ type: ACTIONS.EVALUATE, payload: \"\" })}>= </button>\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}